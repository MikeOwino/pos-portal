/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  MerklePatriciaTest,
  MerklePatriciaTestInterface,
} from "../../../contracts/test/MerklePatriciaTest";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "receiptRoot",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "receipt",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "receiptProof",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "branchMask",
        type: "bytes",
      },
    ],
    name: "verify",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610ba6806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063d1f13e2814610030575b600080fd5b61014b6004803603608081101561004657600080fd5b8135919081019060408101602082013564010000000081111561006857600080fd5b82018360208201111561007a57600080fd5b8035906020019184600183028401116401000000008311171561009c57600080fd5b9193909290916020810190356401000000008111156100ba57600080fd5b8201836020820111156100cc57600080fd5b803590602001918460018302840111640100000000831117156100ee57600080fd5b91939092909160208101903564010000000081111561010c57600080fd5b82018360208201111561011e57600080fd5b8035906020019184600183028401116401000000008311171561014057600080fd5b50909250905061015f565b604080519115158252519081900360200190f35b600061020a87878080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050604080516020601f8901819004810282018101909252878152925087915086908190840183828082843760009201919091525050604080516020601f8c018190048102820181019092528a815292508a91508990819084018382808284376000920191909152508e9250610216915050565b98975050505050505050565b6000610220610b56565b6102298461047b565b90506060610236826104a1565b9050606080856000826102488b610589565b9050805160001415610264576000975050505050505050610473565b60005b865181101561046657815183111561028a57600098505050505050505050610473565b6102a687828151811061029957fe5b60200260200101516106fd565b9550858051906020012084146102c757600098505050505050505050610473565b6102e38782815181106102d657fe5b60200260200101516104a1565b94508451601114156103ad57815183141561034c578c8051906020012061031d8660108151811061031057fe5b602002602001015161077c565b80519060200120141561033b57600198505050505050505050610473565b600098505050505050505050610473565b600082848151811061035a57fe5b016020015160f81c9050601081111561037f5760009950505050505050505050610473565b61039e868260ff168151811061039157fe5b60200260200101516107f9565b9450506001929092019161045e565b84516002141561033b5760006103d36103cc8760008151811061031057fe5b8486610816565b905082518185011415610429578d805190602001206103f88760018151811061031057fe5b8051906020012014156104175760019950505050505050505050610473565b60009950505050505050505050610473565b806104405760009950505050505050505050610473565b80840193506104558660018151811061039157fe5b945061045e9050565b600101610267565b5060009750505050505050505b949350505050565b610483610b56565b5060408051808201909152815181526020828101908201525b919050565b60606104ac826108f5565b6104b557600080fd5b60006104c08361092f565b905060608167ffffffffffffffff811180156104db57600080fd5b5060405190808252806020026020018201604052801561051557816020015b610502610b56565b8152602001906001900390816104fa5790505b5090506000610527856020015161098b565b60208601510190506000805b8481101561057e57610544836109ee565b915060405180604001604052808381526020018481525084828151811061056757fe5b602090810291909101015291810191600101610533565b509195945050505050565b604080516020810190915260008152815160609190156106f7576000806105b1600086610a82565b60f81c905060018114806105c857508060ff166003145b1561065757600185516002020367ffffffffffffffff811180156105eb57600080fd5b506040519080825280601f01601f191660200182016040528015610616576020820181803683370190505b5092506000610626600187610a82565b9050808460008151811061063657fe5b60200101906001600160f81b031916908160001a90535060019250506106a8565b600285516002020367ffffffffffffffff8111801561067557600080fd5b506040519080825280601f01601f1916602001820160405280156106a0576020820181803683370190505b509250600091505b60ff82165b83518110156106f3576106c88360ff16820360020187610a82565b8482815181106106d457fe5b60200101906001600160f81b031916908160001a9053506001016106ad565b5050505b92915050565b606080826000015167ffffffffffffffff8111801561071b57600080fd5b506040519080825280601f01601f191660200182016040528015610746576020820181803683370190505b50905080516000141561075a57905061049c565b60008160200190506107758460200151828660000151610adf565b5092915050565b805160609061078a57600080fd5b60008061079684610b30565b9150915060608167ffffffffffffffff811180156107b357600080fd5b506040519080825280601f01601f1916602001820160405280156107de576020820181803683370190505b509050602081016107f0848285610adf565b50949350505050565b805160009060211461080a57600080fd5b50602001516001015190565b600080606061082486610589565b90506060815167ffffffffffffffff8111801561084057600080fd5b506040519080825280601f01601f19166020018201604052801561086b576020820181803683370190505b509050845b825186018110156108c557600087828151811061088957fe5b602001015160f81c60f81b90508083888403815181106108a557fe5b60200101906001600160f81b031916908160001a90535050600101610870565b508080519060200120828051906020012014156108e557815192506108ea565b600092505b509095945050505050565b80516000906109065750600061049c565b6020820151805160001a9060c08210156109255760009250505061049c565b5060019392505050565b80516000906109405750600061049c565b60008090506000610954846020015161098b565b602085015185519181019250015b8082101561098257610973826109ee565b60019093019290910190610962565b50909392505050565b8051600090811a60808110156109a557600091505061049c565b60b88110806109c0575060c081108015906109c0575060f881105b156109cf57600191505061049c565b60c08110156109e35760b51901905061049c565b60f51901905061049c565b80516000908190811a6080811015610a095760019150610775565b60b8811015610a1e57607e1981019150610775565b60c0811015610a4b5760b78103600185019450806020036101000a85510460018201810193505050610775565b60f8811015610a605760be1981019150610775565b60019390930151602084900360f7016101000a900490920160f5190192915050565b60006002830615610ab3576010826002850481518110610a9e57fe5b016020015160f81c81610aad57fe5b06610ad5565b6010826002850481518110610ac457fe5b016020015160f81c81610ad357fe5b045b60f81b9392505050565b80610ae957610b2b565b5b60208110610b09578251825260209283019290910190601f1901610aea565b8015610b2b578251825160208390036101000a60001901801990921691161782525b505050565b6000806000610b42846020015161098b565b602085015194519481019594039392505050565b60405180604001604052806000815260200160008152509056fea264697066735822122048f1d8c2804e758249c13306a2e17fa1a1b7b7624479a8bce38293e82368902664736f6c63430006060033";

type MerklePatriciaTestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MerklePatriciaTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MerklePatriciaTest__factory extends ContractFactory {
  constructor(...args: MerklePatriciaTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MerklePatriciaTest> {
    return super.deploy(overrides || {}) as Promise<MerklePatriciaTest>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): MerklePatriciaTest {
    return super.attach(address) as MerklePatriciaTest;
  }
  override connect(signer: Signer): MerklePatriciaTest__factory {
    return super.connect(signer) as MerklePatriciaTest__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MerklePatriciaTestInterface {
    return new utils.Interface(_abi) as MerklePatriciaTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MerklePatriciaTest {
    return new Contract(address, _abi, signerOrProvider) as MerklePatriciaTest;
  }
}

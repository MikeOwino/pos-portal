/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  MockStateReceiver,
  MockStateReceiverInterface,
} from "../../../contracts/test/MockStateReceiver";

const _abi = [
  {
    inputs: [],
    name: "childTunnel",
    outputs: [
      {
        internalType: "contract IStateReceiver",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "stateId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "receiveState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_childTunnel",
        type: "address",
      },
    ],
    name: "setChildTunnel",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061020d806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80636d6aa34d14610046578063ca02b2671461006a578063e5e9379c14610092575b600080fd5b61004e610109565b604080516001600160a01b039092168252519081900360200190f35b6100906004803603602081101561008057600080fd5b50356001600160a01b0316610118565b005b610090600480360360408110156100a857600080fd5b813591908101906040810160208201356401000000008111156100ca57600080fd5b8201836020820111156100dc57600080fd5b803590602001918460018302840111640100000000831117156100fe57600080fd5b50909250905061013a565b6000546001600160a01b031681565b600080546001600160a01b0319166001600160a01b0392909216919091179055565b600054604080516313629df560e11b81526004810186815260248201928352604482018590526001600160a01b03909316926326c53bea928792879287929091606401848480828437600081840152601f19601f820116905080830192505050945050505050600060405180830381600087803b1580156101ba57600080fd5b505af11580156101ce573d6000803e3d6000fd5b5050505050505056fea26469706673582212200be45b49a57972ff8af772c30cf1230348b36a88f96308b4499a453f7842663764736f6c63430006060033";

type MockStateReceiverConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockStateReceiverConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockStateReceiver__factory extends ContractFactory {
  constructor(...args: MockStateReceiverConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MockStateReceiver> {
    return super.deploy(overrides || {}) as Promise<MockStateReceiver>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): MockStateReceiver {
    return super.attach(address) as MockStateReceiver;
  }
  override connect(signer: Signer): MockStateReceiver__factory {
    return super.connect(signer) as MockStateReceiver__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockStateReceiverInterface {
    return new utils.Interface(_abi) as MockStateReceiverInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockStateReceiver {
    return new Contract(address, _abi, signerOrProvider) as MockStateReceiver;
  }
}

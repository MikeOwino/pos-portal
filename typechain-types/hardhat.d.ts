/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomiclabs/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "AccessControl",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AccessControl__factory>;
    getContractFactory(
      name: "ERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC165__factory>;
    getContractFactory(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165__factory>;
    getContractFactory(
      name: "ERC1155",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155__factory>;
    getContractFactory(
      name: "ERC1155Receiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155Receiver__factory>;
    getContractFactory(
      name: "IERC1155",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155__factory>;
    getContractFactory(
      name: "IERC1155MetadataURI",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155MetadataURI__factory>;
    getContractFactory(
      name: "IERC1155Receiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155Receiver__factory>;
    getContractFactory(
      name: "ERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "ERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721__factory>;
    getContractFactory(
      name: "IERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721__factory>;
    getContractFactory(
      name: "IERC721Enumerable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Enumerable__factory>;
    getContractFactory(
      name: "IERC721Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Metadata__factory>;
    getContractFactory(
      name: "IERC721Receiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Receiver__factory>;
    getContractFactory(
      name: "AccessControl",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AccessControl__factory>;
    getContractFactory(
      name: "AccessControlMixin",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AccessControlMixin__factory>;
    getContractFactory(
      name: "AccessControlMixinMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AccessControlMixinMock__factory>;
    getContractFactory(
      name: "AccessControlMixinTest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AccessControlMixinTest__factory>;
    getContractFactory(
      name: "BaseChildTunnel",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BaseChildTunnel__factory>;
    getContractFactory(
      name: "BaseRootTunnel",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BaseRootTunnel__factory>;
    getContractFactory(
      name: "ChainExitERC1155Predicate",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ChainExitERC1155Predicate__factory>;
    getContractFactory(
      name: "ChainExitERC1155PredicateProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ChainExitERC1155PredicateProxy__factory>;
    getContractFactory(
      name: "ChildChainManager",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ChildChainManager__factory>;
    getContractFactory(
      name: "ChildChainManagerTest_Initialized",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ChildChainManagerTest_Initialized__factory>;
    getContractFactory(
      name: "ChildChainManagerTest_Uninitialized",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ChildChainManagerTest_Uninitialized__factory>;
    getContractFactory(
      name: "InitializedState",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.InitializedState__factory>;
    getContractFactory(
      name: "UninitializedState",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UninitializedState__factory>;
    getContractFactory(
      name: "ChildChainManagerProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ChildChainManagerProxy__factory>;
    getContractFactory(
      name: "ChildChainManagerProxyTest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ChildChainManagerProxyTest__factory>;
    getContractFactory(
      name: "ChildERC1155",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ChildERC1155__factory>;
    getContractFactory(
      name: "ChildERC1155Test",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ChildERC1155Test__factory>;
    getContractFactory(
      name: "ChildERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ChildERC20__factory>;
    getContractFactory(
      name: "ChildERC20Test",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ChildERC20Test__factory>;
    getContractFactory(
      name: "ChildERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ChildERC721__factory>;
    getContractFactory(
      name: "ChildERC721Test",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ChildERC721Test__factory>;
    getContractFactory(
      name: "ChildMintableERC1155",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ChildMintableERC1155__factory>;
    getContractFactory(
      name: "ChildMintableERC1155Test",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ChildMintableERC1155Test__factory>;
    getContractFactory(
      name: "ChildMintableERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ChildMintableERC20__factory>;
    getContractFactory(
      name: "ChildMintableERC20Test",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ChildMintableERC20Test__factory>;
    getContractFactory(
      name: "ChildMintableERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ChildMintableERC721__factory>;
    getContractFactory(
      name: "ChildMintableERC721Test",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ChildMintableERC721Test__factory>;
    getContractFactory(
      name: "ChildPotatoFarm",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ChildPotatoFarm__factory>;
    getContractFactory(
      name: "ChildPotatoMigrator",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ChildPotatoMigrator__factory>;
    getContractFactory(
      name: "ChildPotatoToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ChildPotatoToken__factory>;
    getContractFactory(
      name: "ChildTunnel",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ChildTunnel__factory>;
    getContractFactory(
      name: "ContextMixinMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ContextMixinMock__factory>;
    getContractFactory(
      name: "ContextMixinTest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ContextMixinTest__factory>;
    getContractFactory(
      name: "ChildChainManager",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ChildChainManager__factory>;
    getContractFactory(
      name: "ChildChainManagerProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ChildChainManagerProxy__factory>;
    getContractFactory(
      name: "IChildChainManager",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IChildChainManager__factory>;
    getContractFactory(
      name: "ChildERC1155",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ChildERC1155__factory>;
    getContractFactory(
      name: "ChildERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ChildERC20__factory>;
    getContractFactory(
      name: "ChildERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ChildERC721__factory>;
    getContractFactory(
      name: "ChildMintableERC1155",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ChildMintableERC1155__factory>;
    getContractFactory(
      name: "ChildMintableERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ChildMintableERC20__factory>;
    getContractFactory(
      name: "ChildMintableERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ChildMintableERC721__factory>;
    getContractFactory(
      name: "UChildDAI",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UChildDAI__factory>;
    getContractFactory(
      name: "IChildToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IChildToken__factory>;
    getContractFactory(
      name: "MaticWETH",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MaticWETH__factory>;
    getContractFactory(
      name: "ERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20__factory>;
    getContractFactory(
      name: "UChildEIP3009",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UChildEIP3009__factory>;
    getContractFactory(
      name: "UChildERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UChildERC20__factory>;
    getContractFactory(
      name: "UChildERC20Proxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UChildERC20Proxy__factory>;
    getContractFactory(
      name: "IStateReceiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IStateReceiver__factory>;
    getContractFactory(
      name: "AccessControlMixin",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AccessControlMixin__factory>;
    getContractFactory(
      name: "EIP712Base",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EIP712Base__factory>;
    getContractFactory(
      name: "NativeMetaTransaction",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.NativeMetaTransaction__factory>;
    getContractFactory(
      name: "IERCProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERCProxy__factory>;
    getContractFactory(
      name: "Proxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Proxy__factory>;
    getContractFactory(
      name: "UpgradableProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UpgradableProxy__factory>;
    getContractFactory(
      name: "ExitPayloadReaderTest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ExitPayloadReaderTest__factory>;
    getContractFactory(
      name: "Migrations",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Migrations__factory>;
    getContractFactory(
      name: "ICheckpointManager",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ICheckpointManager__factory>;
    getContractFactory(
      name: "MockCheckpointManager",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockCheckpointManager__factory>;
    getContractFactory(
      name: "IRootChainManager",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IRootChainManager__factory>;
    getContractFactory(
      name: "RootChainManager",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.RootChainManager__factory>;
    getContractFactory(
      name: "RootChainManagerProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.RootChainManagerProxy__factory>;
    getContractFactory(
      name: "RootChainManagerStorage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.RootChainManagerStorage__factory>;
    getContractFactory(
      name: "DummyERC1155",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DummyERC1155__factory>;
    getContractFactory(
      name: "DummyERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DummyERC20__factory>;
    getContractFactory(
      name: "DummyERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DummyERC721__factory>;
    getContractFactory(
      name: "DummyMintableERC1155",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DummyMintableERC1155__factory>;
    getContractFactory(
      name: "DummyMintableERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DummyMintableERC20__factory>;
    getContractFactory(
      name: "DummyMintableERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DummyMintableERC721__factory>;
    getContractFactory(
      name: "IMintableERC1155",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IMintableERC1155__factory>;
    getContractFactory(
      name: "IMintableERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IMintableERC20__factory>;
    getContractFactory(
      name: "IMintableERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IMintableERC721__factory>;
    getContractFactory(
      name: "DummyStateSender",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DummyStateSender__factory>;
    getContractFactory(
      name: "IStateSender",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IStateSender__factory>;
    getContractFactory(
      name: "ChainExitERC1155Predicate",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ChainExitERC1155Predicate__factory>;
    getContractFactory(
      name: "ChainExitERC1155PredicateProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ChainExitERC1155PredicateProxy__factory>;
    getContractFactory(
      name: "ERC1155Predicate",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155Predicate__factory>;
    getContractFactory(
      name: "ERC1155PredicateProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155PredicateProxy__factory>;
    getContractFactory(
      name: "ERC20Predicate",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20Predicate__factory>;
    getContractFactory(
      name: "ERC20PredicateProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20PredicateProxy__factory>;
    getContractFactory(
      name: "ERC721Predicate",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721Predicate__factory>;
    getContractFactory(
      name: "ERC721PredicateProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721PredicateProxy__factory>;
    getContractFactory(
      name: "EtherPredicate",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EtherPredicate__factory>;
    getContractFactory(
      name: "EtherPredicateProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EtherPredicateProxy__factory>;
    getContractFactory(
      name: "ITokenPredicate",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ITokenPredicate__factory>;
    getContractFactory(
      name: "MintableERC1155Predicate",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MintableERC1155Predicate__factory>;
    getContractFactory(
      name: "MintableERC1155PredicateProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MintableERC1155PredicateProxy__factory>;
    getContractFactory(
      name: "MintableERC20Predicate",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MintableERC20Predicate__factory>;
    getContractFactory(
      name: "MintableERC20PredicateProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MintableERC20PredicateProxy__factory>;
    getContractFactory(
      name: "MintableERC721Predicate",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MintableERC721Predicate__factory>;
    getContractFactory(
      name: "MintableERC721PredicateProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MintableERC721PredicateProxy__factory>;
    getContractFactory(
      name: "MerklePatriciaTest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MerklePatriciaTest__factory>;
    getContractFactory(
      name: "MockStateReceiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockStateReceiver__factory>;
    getContractFactory(
      name: "IStateReceiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IStateReceiver__factory>;
    getContractFactory(
      name: "MockStateSender",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockStateSender__factory>;
    getContractFactory(
      name: "ChildPotatoFarm",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ChildPotatoFarm__factory>;
    getContractFactory(
      name: "ChildPotatoMigrator",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ChildPotatoMigrator__factory>;
    getContractFactory(
      name: "ChildPotatoToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ChildPotatoToken__factory>;
    getContractFactory(
      name: "RootPotatoMigrator",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.RootPotatoMigrator__factory>;
    getContractFactory(
      name: "RootPotatoToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.RootPotatoToken__factory>;
    getContractFactory(
      name: "ProxyTestImpl",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ProxyTestImpl__factory>;
    getContractFactory(
      name: "ProxyTestImplStorageLayoutChange",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ProxyTestImplStorageLayoutChange__factory>;
    getContractFactory(
      name: "TestChildTunnel",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestChildTunnel__factory>;
    getContractFactory(
      name: "TestRootTunnel",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestRootTunnel__factory>;
    getContractFactory(
      name: "TestUChildERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestUChildERC20__factory>;
    getContractFactory(
      name: "BaseChildTunnel",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BaseChildTunnel__factory>;
    getContractFactory(
      name: "BaseRootTunnel",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BaseRootTunnel__factory>;
    getContractFactory(
      name: "ChildTunnel",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ChildTunnel__factory>;
    getContractFactory(
      name: "RootTunnel",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.RootTunnel__factory>;
    getContractFactory(
      name: "DummyERC1155",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DummyERC1155__factory>;
    getContractFactory(
      name: "DummyERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DummyERC20__factory>;
    getContractFactory(
      name: "DummyERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DummyERC721__factory>;
    getContractFactory(
      name: "DummyMintableERC1155",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DummyMintableERC1155__factory>;
    getContractFactory(
      name: "DummyMintableERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DummyMintableERC20__factory>;
    getContractFactory(
      name: "DummyMintableERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DummyMintableERC721__factory>;
    getContractFactory(
      name: "DummyStateSender",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DummyStateSender__factory>;
    getContractFactory(
      name: "EIP712Base",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EIP712Base__factory>;
    getContractFactory(
      name: "ERC1155",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155__factory>;
    getContractFactory(
      name: "ERC1155Predicate",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155Predicate__factory>;
    getContractFactory(
      name: "ERC1155PredicateTest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155PredicateTest__factory>;
    getContractFactory(
      name: "ERC1155PredicateProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155PredicateProxy__factory>;
    getContractFactory(
      name: "ERC1155Receiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155Receiver__factory>;
    getContractFactory(
      name: "ERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC165__factory>;
    getContractFactory(
      name: "ERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20__factory>;
    getContractFactory(
      name: "ERC20Mock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20Mock__factory>;
    getContractFactory(
      name: "ERC20Test",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20Test__factory>;
    getContractFactory(
      name: "ERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20__factory>;
    getContractFactory(
      name: "ERC20Predicate",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20Predicate__factory>;
    getContractFactory(
      name: "ERC20PredicateTest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20PredicateTest__factory>;
    getContractFactory(
      name: "ERC20PredicateProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20PredicateProxy__factory>;
    getContractFactory(
      name: "ERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721__factory>;
    getContractFactory(
      name: "EIP712Mock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EIP712Mock__factory>;
    getContractFactory(
      name: "EIP712Test",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EIP712Test__factory>;
    getContractFactory(
      name: "ERC721Predicate",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721Predicate__factory>;
    getContractFactory(
      name: "ERC721PredicateTest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721PredicateTest__factory>;
    getContractFactory(
      name: "ERC721PredicateProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721PredicateProxy__factory>;
    getContractFactory(
      name: "EtherPredicate",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EtherPredicate__factory>;
    getContractFactory(
      name: "EtherPredicateTest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EtherPredicateTest__factory>;
    getContractFactory(
      name: "EtherPredicateProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EtherPredicateProxy__factory>;
    getContractFactory(
      name: "ExitPayloadReaderTest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ExitPayloadReaderTest__factory>;
    getContractFactory(
      name: "ICheckpointManager",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ICheckpointManager__factory>;
    getContractFactory(
      name: "IChildChainManager",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IChildChainManager__factory>;
    getContractFactory(
      name: "IChildToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IChildToken__factory>;
    getContractFactory(
      name: "IERC1155",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155__factory>;
    getContractFactory(
      name: "IERC1155MetadataURI",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155MetadataURI__factory>;
    getContractFactory(
      name: "IERC1155Receiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155Receiver__factory>;
    getContractFactory(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "IERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721__factory>;
    getContractFactory(
      name: "IERC721Enumerable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Enumerable__factory>;
    getContractFactory(
      name: "IERC721Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Metadata__factory>;
    getContractFactory(
      name: "IERC721Receiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Receiver__factory>;
    getContractFactory(
      name: "IERCProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERCProxy__factory>;
    getContractFactory(
      name: "IMintableERC1155",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IMintableERC1155__factory>;
    getContractFactory(
      name: "IMintableERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IMintableERC20__factory>;
    getContractFactory(
      name: "IMintableERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IMintableERC721__factory>;
    getContractFactory(
      name: "IMulticall3",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IMulticall3__factory>;
    getContractFactory(
      name: "IRootChainManager",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IRootChainManager__factory>;
    getContractFactory(
      name: "IStateReceiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IStateReceiver__factory>;
    getContractFactory(
      name: "IStateSender",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IStateSender__factory>;
    getContractFactory(
      name: "ITokenPredicate",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ITokenPredicate__factory>;
    getContractFactory(
      name: "MaticWETH",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MaticWETH__factory>;
    getContractFactory(
      name: "MaticWETHTest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MaticWETHTest__factory>;
    getContractFactory(
      name: "MerkleTest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MerkleTest__factory>;
    getContractFactory(
      name: "MerkleUser",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MerkleUser__factory>;
    getContractFactory(
      name: "MerklePatriciaProofTest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MerklePatriciaProofTest__factory>;
    getContractFactory(
      name: "MerklePatriciaTest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MerklePatriciaTest__factory>;
    getContractFactory(
      name: "Migrations",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Migrations__factory>;
    getContractFactory(
      name: "MintableERC1155Predicate",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MintableERC1155Predicate__factory>;
    getContractFactory(
      name: "MintableERC1155PredicateTest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MintableERC1155PredicateTest__factory>;
    getContractFactory(
      name: "MintableERC1155PredicateProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MintableERC1155PredicateProxy__factory>;
    getContractFactory(
      name: "MintableERC20Predicate",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MintableERC20Predicate__factory>;
    getContractFactory(
      name: "MintableERC20PredicateTest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MintableERC20PredicateTest__factory>;
    getContractFactory(
      name: "MintableERC20PredicateProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MintableERC20PredicateProxy__factory>;
    getContractFactory(
      name: "MintableERC721Predicate",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MintableERC721Predicate__factory>;
    getContractFactory(
      name: "MintableERC721PredicateTest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MintableERC721PredicateTest__factory>;
    getContractFactory(
      name: "MintableERC721PredicateProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MintableERC721PredicateProxy__factory>;
    getContractFactory(
      name: "MockCheckpointManager",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockCheckpointManager__factory>;
    getContractFactory(
      name: "MockStateReceiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockStateReceiver__factory>;
    getContractFactory(
      name: "IStateReceiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IStateReceiver__factory>;
    getContractFactory(
      name: "MockStateSender",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockStateSender__factory>;
    getContractFactory(
      name: "IMurkyPredeploy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IMurkyPredeploy__factory>;
    getContractFactory(
      name: "MurkyPredeployer",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MurkyPredeployer__factory>;
    getContractFactory(
      name: "NativeMetaTransaction",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.NativeMetaTransaction__factory>;
    getContractFactory(
      name: "NativMetaTransactionTest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.NativMetaTransactionTest__factory>;
    getContractFactory(
      name: "INMTContract",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.INMTContract__factory>;
    getContractFactory(
      name: "NMTHelpers",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.NMTHelpers__factory>;
    getContractFactory(
      name: "Proxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Proxy__factory>;
    getContractFactory(
      name: "ProxyTestImpl",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ProxyTestImpl__factory>;
    getContractFactory(
      name: "ProxyTestImplStorageLayoutChange",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ProxyTestImplStorageLayoutChange__factory>;
    getContractFactory(
      name: "RLPReaderTest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.RLPReaderTest__factory>;
    getContractFactory(
      name: "RLPReaderUser",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.RLPReaderUser__factory>;
    getContractFactory(
      name: "RootChainManager",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.RootChainManager__factory>;
    getContractFactory(
      name: "RootChainManagerProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.RootChainManagerProxy__factory>;
    getContractFactory(
      name: "RootChainManagerStorage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.RootChainManagerStorage__factory>;
    getContractFactory(
      name: "RootPotatoMigrator",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.RootPotatoMigrator__factory>;
    getContractFactory(
      name: "RootPotatoToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.RootPotatoToken__factory>;
    getContractFactory(
      name: "RootTunnel",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.RootTunnel__factory>;
    getContractFactory(
      name: "Script",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Script__factory>;
    getContractFactory(
      name: "StdAssertions",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.StdAssertions__factory>;
    getContractFactory(
      name: "StdError",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.StdError__factory>;
    getContractFactory(
      name: "StdStorageSafe",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.StdStorageSafe__factory>;
    getContractFactory(
      name: "DSTest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DSTest__factory>;
    getContractFactory(
      name: "Test",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Test__factory>;
    getContractFactory(
      name: "TestChildTunnel",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestChildTunnel__factory>;
    getContractFactory(
      name: "TestRootTunnel",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestRootTunnel__factory>;
    getContractFactory(
      name: "TestUChildERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestUChildERC20__factory>;
    getContractFactory(
      name: "UChildDAI",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UChildDAI__factory>;
    getContractFactory(
      name: "UChildDAITest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UChildDAITest__factory>;
    getContractFactory(
      name: "UChildEIP3009",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UChildEIP3009__factory>;
    getContractFactory(
      name: "UChildEIP3009Test",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UChildEIP3009Test__factory>;
    getContractFactory(
      name: "UChildERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UChildERC20__factory>;
    getContractFactory(
      name: "InitializedState",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.InitializedState__factory>;
    getContractFactory(
      name: "UChildERC20Test_Initialized",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UChildERC20Test_Initialized__factory>;
    getContractFactory(
      name: "UChildERC20Test_Uninitialized",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UChildERC20Test_Uninitialized__factory>;
    getContractFactory(
      name: "UninitializedState",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UninitializedState__factory>;
    getContractFactory(
      name: "UChildERC20Proxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UChildERC20Proxy__factory>;
    getContractFactory(
      name: "UChildERC20ProxyTest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UChildERC20ProxyTest__factory>;
    getContractFactory(
      name: "UpgradableProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UpgradableProxy__factory>;
    getContractFactory(
      name: "DummyImplementation",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DummyImplementation__factory>;
    getContractFactory(
      name: "UpgradableProxyTest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UpgradableProxyTest__factory>;
    getContractFactory(
      name: "Vm",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Vm__factory>;
    getContractFactory(
      name: "VmSafe",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VmSafe__factory>;

    getContractAt(
      name: "AccessControl",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AccessControl>;
    getContractAt(
      name: "ERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC165>;
    getContractAt(
      name: "IERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC165>;
    getContractAt(
      name: "ERC1155",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155>;
    getContractAt(
      name: "ERC1155Receiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155Receiver>;
    getContractAt(
      name: "IERC1155",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155>;
    getContractAt(
      name: "IERC1155MetadataURI",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155MetadataURI>;
    getContractAt(
      name: "IERC1155Receiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155Receiver>;
    getContractAt(
      name: "ERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20>;
    getContractAt(
      name: "IERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "ERC721",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721>;
    getContractAt(
      name: "IERC721",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721>;
    getContractAt(
      name: "IERC721Enumerable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Enumerable>;
    getContractAt(
      name: "IERC721Metadata",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Metadata>;
    getContractAt(
      name: "IERC721Receiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Receiver>;
    getContractAt(
      name: "AccessControl",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AccessControl>;
    getContractAt(
      name: "AccessControlMixin",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AccessControlMixin>;
    getContractAt(
      name: "AccessControlMixinMock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AccessControlMixinMock>;
    getContractAt(
      name: "AccessControlMixinTest",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AccessControlMixinTest>;
    getContractAt(
      name: "BaseChildTunnel",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BaseChildTunnel>;
    getContractAt(
      name: "BaseRootTunnel",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BaseRootTunnel>;
    getContractAt(
      name: "ChainExitERC1155Predicate",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ChainExitERC1155Predicate>;
    getContractAt(
      name: "ChainExitERC1155PredicateProxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ChainExitERC1155PredicateProxy>;
    getContractAt(
      name: "ChildChainManager",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ChildChainManager>;
    getContractAt(
      name: "ChildChainManagerTest_Initialized",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ChildChainManagerTest_Initialized>;
    getContractAt(
      name: "ChildChainManagerTest_Uninitialized",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ChildChainManagerTest_Uninitialized>;
    getContractAt(
      name: "InitializedState",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.InitializedState>;
    getContractAt(
      name: "UninitializedState",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.UninitializedState>;
    getContractAt(
      name: "ChildChainManagerProxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ChildChainManagerProxy>;
    getContractAt(
      name: "ChildChainManagerProxyTest",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ChildChainManagerProxyTest>;
    getContractAt(
      name: "ChildERC1155",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ChildERC1155>;
    getContractAt(
      name: "ChildERC1155Test",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ChildERC1155Test>;
    getContractAt(
      name: "ChildERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ChildERC20>;
    getContractAt(
      name: "ChildERC20Test",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ChildERC20Test>;
    getContractAt(
      name: "ChildERC721",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ChildERC721>;
    getContractAt(
      name: "ChildERC721Test",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ChildERC721Test>;
    getContractAt(
      name: "ChildMintableERC1155",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ChildMintableERC1155>;
    getContractAt(
      name: "ChildMintableERC1155Test",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ChildMintableERC1155Test>;
    getContractAt(
      name: "ChildMintableERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ChildMintableERC20>;
    getContractAt(
      name: "ChildMintableERC20Test",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ChildMintableERC20Test>;
    getContractAt(
      name: "ChildMintableERC721",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ChildMintableERC721>;
    getContractAt(
      name: "ChildMintableERC721Test",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ChildMintableERC721Test>;
    getContractAt(
      name: "ChildPotatoFarm",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ChildPotatoFarm>;
    getContractAt(
      name: "ChildPotatoMigrator",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ChildPotatoMigrator>;
    getContractAt(
      name: "ChildPotatoToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ChildPotatoToken>;
    getContractAt(
      name: "ChildTunnel",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ChildTunnel>;
    getContractAt(
      name: "ContextMixinMock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ContextMixinMock>;
    getContractAt(
      name: "ContextMixinTest",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ContextMixinTest>;
    getContractAt(
      name: "ChildChainManager",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ChildChainManager>;
    getContractAt(
      name: "ChildChainManagerProxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ChildChainManagerProxy>;
    getContractAt(
      name: "IChildChainManager",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IChildChainManager>;
    getContractAt(
      name: "ChildERC1155",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ChildERC1155>;
    getContractAt(
      name: "ChildERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ChildERC20>;
    getContractAt(
      name: "ChildERC721",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ChildERC721>;
    getContractAt(
      name: "ChildMintableERC1155",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ChildMintableERC1155>;
    getContractAt(
      name: "ChildMintableERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ChildMintableERC20>;
    getContractAt(
      name: "ChildMintableERC721",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ChildMintableERC721>;
    getContractAt(
      name: "UChildDAI",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.UChildDAI>;
    getContractAt(
      name: "IChildToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IChildToken>;
    getContractAt(
      name: "MaticWETH",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MaticWETH>;
    getContractAt(
      name: "ERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20>;
    getContractAt(
      name: "UChildEIP3009",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.UChildEIP3009>;
    getContractAt(
      name: "UChildERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.UChildERC20>;
    getContractAt(
      name: "UChildERC20Proxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.UChildERC20Proxy>;
    getContractAt(
      name: "IStateReceiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IStateReceiver>;
    getContractAt(
      name: "AccessControlMixin",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AccessControlMixin>;
    getContractAt(
      name: "EIP712Base",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.EIP712Base>;
    getContractAt(
      name: "NativeMetaTransaction",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.NativeMetaTransaction>;
    getContractAt(
      name: "IERCProxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERCProxy>;
    getContractAt(
      name: "Proxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Proxy>;
    getContractAt(
      name: "UpgradableProxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.UpgradableProxy>;
    getContractAt(
      name: "ExitPayloadReaderTest",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ExitPayloadReaderTest>;
    getContractAt(
      name: "Migrations",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Migrations>;
    getContractAt(
      name: "ICheckpointManager",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ICheckpointManager>;
    getContractAt(
      name: "MockCheckpointManager",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MockCheckpointManager>;
    getContractAt(
      name: "IRootChainManager",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IRootChainManager>;
    getContractAt(
      name: "RootChainManager",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.RootChainManager>;
    getContractAt(
      name: "RootChainManagerProxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.RootChainManagerProxy>;
    getContractAt(
      name: "RootChainManagerStorage",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.RootChainManagerStorage>;
    getContractAt(
      name: "DummyERC1155",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DummyERC1155>;
    getContractAt(
      name: "DummyERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DummyERC20>;
    getContractAt(
      name: "DummyERC721",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DummyERC721>;
    getContractAt(
      name: "DummyMintableERC1155",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DummyMintableERC1155>;
    getContractAt(
      name: "DummyMintableERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DummyMintableERC20>;
    getContractAt(
      name: "DummyMintableERC721",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DummyMintableERC721>;
    getContractAt(
      name: "IMintableERC1155",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IMintableERC1155>;
    getContractAt(
      name: "IMintableERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IMintableERC20>;
    getContractAt(
      name: "IMintableERC721",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IMintableERC721>;
    getContractAt(
      name: "DummyStateSender",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DummyStateSender>;
    getContractAt(
      name: "IStateSender",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IStateSender>;
    getContractAt(
      name: "ChainExitERC1155Predicate",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ChainExitERC1155Predicate>;
    getContractAt(
      name: "ChainExitERC1155PredicateProxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ChainExitERC1155PredicateProxy>;
    getContractAt(
      name: "ERC1155Predicate",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155Predicate>;
    getContractAt(
      name: "ERC1155PredicateProxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155PredicateProxy>;
    getContractAt(
      name: "ERC20Predicate",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20Predicate>;
    getContractAt(
      name: "ERC20PredicateProxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20PredicateProxy>;
    getContractAt(
      name: "ERC721Predicate",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721Predicate>;
    getContractAt(
      name: "ERC721PredicateProxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721PredicateProxy>;
    getContractAt(
      name: "EtherPredicate",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.EtherPredicate>;
    getContractAt(
      name: "EtherPredicateProxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.EtherPredicateProxy>;
    getContractAt(
      name: "ITokenPredicate",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ITokenPredicate>;
    getContractAt(
      name: "MintableERC1155Predicate",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MintableERC1155Predicate>;
    getContractAt(
      name: "MintableERC1155PredicateProxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MintableERC1155PredicateProxy>;
    getContractAt(
      name: "MintableERC20Predicate",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MintableERC20Predicate>;
    getContractAt(
      name: "MintableERC20PredicateProxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MintableERC20PredicateProxy>;
    getContractAt(
      name: "MintableERC721Predicate",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MintableERC721Predicate>;
    getContractAt(
      name: "MintableERC721PredicateProxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MintableERC721PredicateProxy>;
    getContractAt(
      name: "MerklePatriciaTest",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MerklePatriciaTest>;
    getContractAt(
      name: "MockStateReceiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MockStateReceiver>;
    getContractAt(
      name: "IStateReceiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IStateReceiver>;
    getContractAt(
      name: "MockStateSender",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MockStateSender>;
    getContractAt(
      name: "ChildPotatoFarm",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ChildPotatoFarm>;
    getContractAt(
      name: "ChildPotatoMigrator",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ChildPotatoMigrator>;
    getContractAt(
      name: "ChildPotatoToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ChildPotatoToken>;
    getContractAt(
      name: "RootPotatoMigrator",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.RootPotatoMigrator>;
    getContractAt(
      name: "RootPotatoToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.RootPotatoToken>;
    getContractAt(
      name: "ProxyTestImpl",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ProxyTestImpl>;
    getContractAt(
      name: "ProxyTestImplStorageLayoutChange",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ProxyTestImplStorageLayoutChange>;
    getContractAt(
      name: "TestChildTunnel",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestChildTunnel>;
    getContractAt(
      name: "TestRootTunnel",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestRootTunnel>;
    getContractAt(
      name: "TestUChildERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestUChildERC20>;
    getContractAt(
      name: "BaseChildTunnel",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BaseChildTunnel>;
    getContractAt(
      name: "BaseRootTunnel",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BaseRootTunnel>;
    getContractAt(
      name: "ChildTunnel",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ChildTunnel>;
    getContractAt(
      name: "RootTunnel",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.RootTunnel>;
    getContractAt(
      name: "DummyERC1155",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DummyERC1155>;
    getContractAt(
      name: "DummyERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DummyERC20>;
    getContractAt(
      name: "DummyERC721",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DummyERC721>;
    getContractAt(
      name: "DummyMintableERC1155",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DummyMintableERC1155>;
    getContractAt(
      name: "DummyMintableERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DummyMintableERC20>;
    getContractAt(
      name: "DummyMintableERC721",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DummyMintableERC721>;
    getContractAt(
      name: "DummyStateSender",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DummyStateSender>;
    getContractAt(
      name: "EIP712Base",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.EIP712Base>;
    getContractAt(
      name: "ERC1155",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155>;
    getContractAt(
      name: "ERC1155Predicate",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155Predicate>;
    getContractAt(
      name: "ERC1155PredicateTest",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155PredicateTest>;
    getContractAt(
      name: "ERC1155PredicateProxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155PredicateProxy>;
    getContractAt(
      name: "ERC1155Receiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155Receiver>;
    getContractAt(
      name: "ERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC165>;
    getContractAt(
      name: "ERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20>;
    getContractAt(
      name: "ERC20Mock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20Mock>;
    getContractAt(
      name: "ERC20Test",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20Test>;
    getContractAt(
      name: "ERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20>;
    getContractAt(
      name: "ERC20Predicate",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20Predicate>;
    getContractAt(
      name: "ERC20PredicateTest",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20PredicateTest>;
    getContractAt(
      name: "ERC20PredicateProxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20PredicateProxy>;
    getContractAt(
      name: "ERC721",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721>;
    getContractAt(
      name: "EIP712Mock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.EIP712Mock>;
    getContractAt(
      name: "EIP712Test",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.EIP712Test>;
    getContractAt(
      name: "ERC721Predicate",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721Predicate>;
    getContractAt(
      name: "ERC721PredicateTest",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721PredicateTest>;
    getContractAt(
      name: "ERC721PredicateProxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721PredicateProxy>;
    getContractAt(
      name: "EtherPredicate",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.EtherPredicate>;
    getContractAt(
      name: "EtherPredicateTest",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.EtherPredicateTest>;
    getContractAt(
      name: "EtherPredicateProxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.EtherPredicateProxy>;
    getContractAt(
      name: "ExitPayloadReaderTest",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ExitPayloadReaderTest>;
    getContractAt(
      name: "ICheckpointManager",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ICheckpointManager>;
    getContractAt(
      name: "IChildChainManager",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IChildChainManager>;
    getContractAt(
      name: "IChildToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IChildToken>;
    getContractAt(
      name: "IERC1155",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155>;
    getContractAt(
      name: "IERC1155MetadataURI",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155MetadataURI>;
    getContractAt(
      name: "IERC1155Receiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155Receiver>;
    getContractAt(
      name: "IERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC165>;
    getContractAt(
      name: "IERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "IERC721",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721>;
    getContractAt(
      name: "IERC721Enumerable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Enumerable>;
    getContractAt(
      name: "IERC721Metadata",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Metadata>;
    getContractAt(
      name: "IERC721Receiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Receiver>;
    getContractAt(
      name: "IERCProxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERCProxy>;
    getContractAt(
      name: "IMintableERC1155",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IMintableERC1155>;
    getContractAt(
      name: "IMintableERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IMintableERC20>;
    getContractAt(
      name: "IMintableERC721",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IMintableERC721>;
    getContractAt(
      name: "IMulticall3",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IMulticall3>;
    getContractAt(
      name: "IRootChainManager",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IRootChainManager>;
    getContractAt(
      name: "IStateReceiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IStateReceiver>;
    getContractAt(
      name: "IStateSender",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IStateSender>;
    getContractAt(
      name: "ITokenPredicate",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ITokenPredicate>;
    getContractAt(
      name: "MaticWETH",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MaticWETH>;
    getContractAt(
      name: "MaticWETHTest",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MaticWETHTest>;
    getContractAt(
      name: "MerkleTest",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MerkleTest>;
    getContractAt(
      name: "MerkleUser",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MerkleUser>;
    getContractAt(
      name: "MerklePatriciaProofTest",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MerklePatriciaProofTest>;
    getContractAt(
      name: "MerklePatriciaTest",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MerklePatriciaTest>;
    getContractAt(
      name: "Migrations",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Migrations>;
    getContractAt(
      name: "MintableERC1155Predicate",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MintableERC1155Predicate>;
    getContractAt(
      name: "MintableERC1155PredicateTest",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MintableERC1155PredicateTest>;
    getContractAt(
      name: "MintableERC1155PredicateProxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MintableERC1155PredicateProxy>;
    getContractAt(
      name: "MintableERC20Predicate",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MintableERC20Predicate>;
    getContractAt(
      name: "MintableERC20PredicateTest",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MintableERC20PredicateTest>;
    getContractAt(
      name: "MintableERC20PredicateProxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MintableERC20PredicateProxy>;
    getContractAt(
      name: "MintableERC721Predicate",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MintableERC721Predicate>;
    getContractAt(
      name: "MintableERC721PredicateTest",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MintableERC721PredicateTest>;
    getContractAt(
      name: "MintableERC721PredicateProxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MintableERC721PredicateProxy>;
    getContractAt(
      name: "MockCheckpointManager",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MockCheckpointManager>;
    getContractAt(
      name: "MockStateReceiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MockStateReceiver>;
    getContractAt(
      name: "IStateReceiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IStateReceiver>;
    getContractAt(
      name: "MockStateSender",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MockStateSender>;
    getContractAt(
      name: "IMurkyPredeploy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IMurkyPredeploy>;
    getContractAt(
      name: "MurkyPredeployer",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MurkyPredeployer>;
    getContractAt(
      name: "NativeMetaTransaction",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.NativeMetaTransaction>;
    getContractAt(
      name: "NativMetaTransactionTest",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.NativMetaTransactionTest>;
    getContractAt(
      name: "INMTContract",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.INMTContract>;
    getContractAt(
      name: "NMTHelpers",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.NMTHelpers>;
    getContractAt(
      name: "Proxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Proxy>;
    getContractAt(
      name: "ProxyTestImpl",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ProxyTestImpl>;
    getContractAt(
      name: "ProxyTestImplStorageLayoutChange",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ProxyTestImplStorageLayoutChange>;
    getContractAt(
      name: "RLPReaderTest",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.RLPReaderTest>;
    getContractAt(
      name: "RLPReaderUser",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.RLPReaderUser>;
    getContractAt(
      name: "RootChainManager",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.RootChainManager>;
    getContractAt(
      name: "RootChainManagerProxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.RootChainManagerProxy>;
    getContractAt(
      name: "RootChainManagerStorage",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.RootChainManagerStorage>;
    getContractAt(
      name: "RootPotatoMigrator",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.RootPotatoMigrator>;
    getContractAt(
      name: "RootPotatoToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.RootPotatoToken>;
    getContractAt(
      name: "RootTunnel",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.RootTunnel>;
    getContractAt(
      name: "Script",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Script>;
    getContractAt(
      name: "StdAssertions",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.StdAssertions>;
    getContractAt(
      name: "StdError",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.StdError>;
    getContractAt(
      name: "StdStorageSafe",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.StdStorageSafe>;
    getContractAt(
      name: "DSTest",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DSTest>;
    getContractAt(
      name: "Test",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Test>;
    getContractAt(
      name: "TestChildTunnel",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestChildTunnel>;
    getContractAt(
      name: "TestRootTunnel",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestRootTunnel>;
    getContractAt(
      name: "TestUChildERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestUChildERC20>;
    getContractAt(
      name: "UChildDAI",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.UChildDAI>;
    getContractAt(
      name: "UChildDAITest",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.UChildDAITest>;
    getContractAt(
      name: "UChildEIP3009",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.UChildEIP3009>;
    getContractAt(
      name: "UChildEIP3009Test",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.UChildEIP3009Test>;
    getContractAt(
      name: "UChildERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.UChildERC20>;
    getContractAt(
      name: "InitializedState",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.InitializedState>;
    getContractAt(
      name: "UChildERC20Test_Initialized",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.UChildERC20Test_Initialized>;
    getContractAt(
      name: "UChildERC20Test_Uninitialized",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.UChildERC20Test_Uninitialized>;
    getContractAt(
      name: "UninitializedState",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.UninitializedState>;
    getContractAt(
      name: "UChildERC20Proxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.UChildERC20Proxy>;
    getContractAt(
      name: "UChildERC20ProxyTest",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.UChildERC20ProxyTest>;
    getContractAt(
      name: "UpgradableProxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.UpgradableProxy>;
    getContractAt(
      name: "DummyImplementation",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DummyImplementation>;
    getContractAt(
      name: "UpgradableProxyTest",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.UpgradableProxyTest>;
    getContractAt(
      name: "Vm",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Vm>;
    getContractAt(
      name: "VmSafe",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VmSafe>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
  }
}
